version: "3.9"

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
    - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      FRONTEND_URL: ${FRONTEND_URL}
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - internal

  nginx:
    build: 
      context: .
      dockerfile: nginx/Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
        - VITE_WS_URL=${VITE_WS_URL}
        - VITE_BASE_URL=${VITE_BASE_URL}
    ports:
      - "80:80"
      - "443:443"
      - "1935:1935"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - uploads_data:/var/www/stream_sh/uploads:ro
      - hls_data:/tmp/hls
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - internal
      - public

volumes:
  postgres_data:
  uploads_data:
  hls_data:

networks:
  internal:
    driver: bridge
  public:
    driver: bridge
